<!--    John Millner
        Sigsent 
        Group 11
-->

<launch>
    <!-- put nodes meant to run on the basestation computer here -->
    <!-- Joystick 
    <node respawn="false" pkg="joy" type="joy_node" name="joy" >
        <param name="dev" type="string" value="/dev/input/js0" />
        <param name="deadzone" value="0.05" />
    </node>-->

    <!-- GPS goal -->
    <!--
    <node name="gps_goal" pkg="gps_goal" type="gps_goal" />
    -->

    <!-- transform 
    <node name="tf_laser" pkg="tf" type="static_transform_publisher" args="0 0 1 0 0 0 /base_link /laser 10" />
    -->

    <!-- Unscented Kalman Filter for odometry - fuses IMU and GPS -->
    <node name="ukf" pkg="robot_localization" type="ukf_localization_node" output="screen">
        <rosparam file="$(find sigsent)params/ukf.yaml" command="load"/>
        <remap from="odometry/filtered" to="odom"/>
    </node>

    <!-- Transforms GPS into usable data for UKF -->
    <node name="navSat_transform" pkg="robot_localization" type="navsat_transform_node" output="screen">
        <remap from="/imu/data" to="imu" />
        <remap from="/gps/fix" to="fix" />
        <remap from="/odometry/filtered" to="odom" />
    </node> 

    <!-- SLAM -->
    <node name="gmapping" pkg="gmapping" type="slam_gmapping" >
        <param name="base_frame" value="base_link" />
        <param name="odom_frame" value="odom" />
        <param name="map_frame" value="map" />
        <param name="scan" value="scan" />        
    </node>

    <!-- Move base -->
    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
	    <rosparam file="$(find sigsent)/params/move_base.yaml" command="load" />
    </node> 

    <!-- RVIZ -->
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find sigsent)/rviz/sigsent.rviz"/>


	<group>
		<!-- info to run nodes on sigsent-->
    	<machine name="sigsent" address="sigsent" env-loader="~/sigsent.bash" default="true" user="sigsent" timeout="10.0" />
        
		<!-- put nodes meant to run on the sigsent raspi computer here -->
		
		<!-- MPU-9250 -->
		<node name="enableIMU" pkg="sigsent" type="enableIMU.py" output="screen"/>
		<node name="imu" pkg="i2c_imu" type="i2c_imu_node" respawn="true" output="screen">
		    <remap from="data" to="imu" />
		</node>

		<!-- Sparkfun Venus638FLPx -->
		<node name="gps" pkg="nmea_navsat_driver" type="nmea_serial_driver" respawn="true" output="screen">
		    <param name="port" type="string" value="/dev/ttyS0" />
		    <param name="baud" type="int" value="115200" />
		</node>
	    
	    <!--
		<node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen" >
			<param name="video_device" value="/dev/video0" />
			<param name="image_width" value="640" />
			<param name="image_height" value="480" />
			<param name="pixel_format" value="yuyv" />
			<param name="camera_frame_id" value="usb_cam" />
			<param name="io_method" value="mmap"/>
		</node>-->
    
	    <!-- Hokuyo UTM-30lx LIDAR -->
		<node name="lidar" pkg="urg_node" type="urg_node" respawn="true" output="screen">
		    <param name="calibrate_time" type="bool" value="true"/>
		    <param name="port" type="string" value="/dev/ttyACM0"/>
		    <param name="intensity" type="bool" value="false"/>
		    <param name="min_ang" value="-2.2689"/>
		    <param name="max_ang" value="+2.2689"/>
		    <param name="cluster" value="1"/>    
		    <param name="frame_id" value="base_link"/>
		</node>
		
	
    </group>

</launch>


