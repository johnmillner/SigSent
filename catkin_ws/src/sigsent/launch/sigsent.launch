<!--    John Millner
        Sigsent 
        Group 11
-->

<launch>
    <!-- put nodes meant to run on the basestation computer here -->
	
	<!-- Joystick -->
	<node respawn="false" pkg="joy" type="joy_node" name="joy" >
        <param name="dev" type="string" value="/dev/input/js0" />
        <param name="deadzone" value="0.05" />
    </node>

	<!-- GPS goal -->
    <node name="gps_goal" pkg="gps_goal" type="gps_goal" />
    
    <!-- transform -->
    <node name="tf_laser" pkg="tf" type="static_transform_publisher" args="0 0 1 0 0 0 /base_link /laser 10" />
    
	<!-- SLAM -->
    <node name="gmapping" pkg="gmapping" type="slam_gmapping" >
        <param name="base_frame" value="base_link" />
        <param name="odom_frame" value="odom" />
        <param name="map_frame" value="map" />
        <param name="scan" value="scan" />        
    </node>
    
  	<!-- AMCL -->
	<node name="amcl" pkg="amcl" type="amcl">
		<param name="use_map_topic" value='true' />
		<param name="odom_model_type" value="diff-corrected" />
		<param name="odom_frame_id " value="odom" />
		<param name="base_frame_id" value="base_footprint" />
		<param name="initial_pose_x" value="0.0"/>
		<param name="initial_pose_y" value="0.0"/>
		<param name="initial_pose_a" value="0.0"/>
		<param name="recovery_alpha_slow" value="0" />
		<param name="recovery_alpha_fast" value="0" />
	</node>
	
	<include file="$(find turtlebot_navigation)/launch/includes/velocity_smoother.launch.xml"/>
	<include file="$(find turtlebot_navigation)/launch/includes/safety_controller.launch.xml"/>
	
	<!-- Move base -->
	<node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
		<rosparam file="$(find sigsent)/params/move_base.yaml" command="load" />
		<remap from="cmd_vel" to="navigation_velocity_smoother/raw_cmd_vel" />
	</node> 
	
	<!-- turns GPS fix message to a UTM for move_base -->
	<node name="gpsTOutm" pkg="gps_common" type="utm_odometry_node" />
	
	<!-- turns GPS fix message to a Stamped Pose message for gps_goal -->
	<node name="gpsTOpose" pkg="sigsent" type="fix_to_pose.py" />
	
	<!-- RVIZ -->
	<node name="rviz" pkg="rviz" type="rviz" args="-d $(find sigsent)/rviz/sigsent.rviz"/>
	

	<!-- put nodes meant to run on the sigsent raspi computer here -->

	<group>
		<!-- info to run nodes on sigsent-->
    	<machine name="sigsent" address="sigsent" env-loader="~/sigsent.bash" default="true" user="sigsent" timeout="10.0" />
        
        <!-- Turtlebot -->
		<arg name="base"              default="$(env TURTLEBOT_BASE)"         doc="mobile base type [create, roomba]"/>
		<arg name="stacks"            default="$(env TURTLEBOT_STACKS)"       doc="stack type displayed in visualisation/simulation [circles, hexagons]"/>
		<arg name="serialport"        default="$(env TURTLEBOT_SERIAL_PORT)"  doc="used by create to configure the port it is connected on [/dev/ttyUSB0, /dev/ttyS0]"/>
		<arg name="3d_sensor"         default="$(env TURTLEBOT_3D_SENSOR)"    doc="3d sensor types [kinect, asux_xtion_pro]"/>
		
		<!-- Turtlebot config files-->
		<include file="$(find turtlebot_bringup)/launch/includes/robot.launch.xml">
		    <arg name="base" value="$(arg base)" />
		    <arg name="stacks" value="$(arg stacks)" />
		    <arg name="3d_sensor" value="$(arg 3d_sensor)" />
		</include>

        <!-- Mobile Base for turtlebot -->
		<include file="$(find turtlebot_bringup)/launch/includes/mobile_base.launch.xml">
		    <arg name="base" value="$(arg base)" />
		    <arg name="serialport" value="$(arg serialport)" />
		</include>
		
		<!-- MPU-9250 -->
		<node name="imu" pkg="i2c_imu" type="i2c_imu_node" respawn="true" output="screen">
		    <remap from="data" to="imu" />
		<node/>

		<!-- Sparkfun Venus638FLPx -->
		<node name="gps" pkg="nmea_navsat_driver" type="nmea_serial_driver" respawn="true" output="screen">
		    <param name="port" type="string" value="/dev/ttyS0" />
		    <param name="baud" type="int" value="9800" />
		</node>
	
		<!-- Playstation Eye -->
		 <node pkg="hector_pseye_camera" type="pseye_camera_node" name="pseye_camera" output="screen">
			<param name="camera_topic" value="ps_eye1/image_raw" />
			<param name="camera_info_url" value="package://hector_pseye_camera/config/ps_eye.ini"/>
			<param name="dev" value="/dev/video0"/>
			<param name="frame_name" value="camera_optical_frame"/>
			<param name="use_every_n_th_image" value="1"/>
			<param name="fps" value="60"/>
		</node>
    
    	    <!-- Hokuyo UTM-30lx LIDAR -->
		<node name="lidar" pkg="urg_node" type="urg_node" respawn="true" output="screen">
		    <param name="calibrate_time" type="bool" value="true"/>
		    <param name="port" type="string" value="/dev/ttyACM0"/>
		    <param name="intensity" type="bool" value="false"/>
		    <param name="min_ang" value="-2.2689"/>
		    <param name="max_ang" value="+2.2689"/>
		    <param name="cluster" value="1"/>    
		    <param name="frame_id" value="base_link"/>
		</node>
		
		<!-- REW - Enables/disables lightbar by writing out GPIO pin connected to it's MOSFET -->
        <node name="lightbar" pkg="sigsent" type="lightbar.py" />

    </group>
    
    

	

</launch>


